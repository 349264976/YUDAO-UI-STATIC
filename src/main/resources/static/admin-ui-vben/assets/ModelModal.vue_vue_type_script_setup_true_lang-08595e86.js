import{u as I,cm as n,bb as d,N as c,K as P,x as g,a as _,c as T,z as R,k as t,o as k,j as x,w as B,n as F,ag as O}from"./index-8b526734.js";import{u as v,_ as E}from"./useForm-f7dccb87.js";import"./BasicForm.vue_vue_type_style_index_0_lang-42e5fba8.js";import{a as L,B as A}from"./index-40f1f97e.js";import{b as G}from"./index-3a96327b.js";import"./index-ec19b8e7.js";import"./index-d2d20fb4.js";import"./tree-e6981725.js";import"./index-03ea37ad.js";import"./index-3e87b811.js";import"./index-c8168e27.js";import"./sortable.esm-f208c0d8.js";import{u as s}from"./useRender-f65ba3eb.js";import{D as p,g as u}from"./dict-5cefafd8.js";import{S as V}from"./index-8e6d9858.js";const{apiUrl:Y=""}=I();function le(e){return n.get({url:"/bpm/model/page",params:e})}function N(e){return n.get({url:"/bpm/model/get?id="+e})}function U(e){return n.put({url:"/bpm/model/update",data:e})}function q(e){return n.put({url:"/bpm/model/update-state",data:e})}function H(e){return n.post({url:"/bpm/model/create",data:e})}function de(e){return n.delete({url:"/bpm/model/delete?id="+e})}function pe(e){return n.post({url:"/bpm/model/deploy?id="+e})}function me(e,i){return n.uploadFile({url:Y+"/bpm/model/import",onUploadProgress:i},e)}const ce=[{title:"编号",dataIndex:"id",defaultHidden:!0,width:100},{title:"流程标识",dataIndex:"key",width:180},{title:"流程名称",dataIndex:"name",width:180,customRender:({record:e})=>d(c,{type:"link",onClick:j.bind(null,e)},()=>e.formName)},{title:"流程分类",dataIndex:"category",width:120,customRender:({text:e})=>s.renderDict(e,p.BPM_MODEL_CATEGORY)},{title:"表单信息",dataIndex:"formType",width:180,customRender:({record:e})=>e.formId?d(c,{type:"link",onClick:h.bind(null,e)},()=>e.formName):e.formCustomCreatePath?d(c,{type:"link",onClick:h.bind(null,e)},()=>e.formCustomCreatePath):s.renderTag("暂无表单")},{title:"创建时间",dataIndex:"createTime",width:180,customRender:({text:e})=>s.renderDate(e)},{title:"最新部署的流程定义",children:[{title:"流程版本",dataIndex:"processDefinition.version",width:160,customRender:({record:e})=>e.processDefinition?s.renderTag("v"+e.processDefinition.version):s.renderTag("未部署")},{title:"激活状态",dataIndex:"processDefinition.suspensionState",width:100,customRender:({record:e})=>{if(e.processDefinition)return Reflect.has(e,"suspensionState")||(e.pendingStatus=!1),d(V,{checked:e.processDefinition.suspensionState===1,checkedChildren:"激活",unCheckedChildren:"挂起",onChange(i){const a=i?0:1,{createMessage:r}=g();q({id:e.id,state:a}).then(()=>{e.status=a,r.success("已成功修改流程状态")}).catch(()=>{r.error("修改流程状态失败")}).finally(()=>{e.pendingStatus=!1})}})}},{title:"部署时间",dataIndex:"processDefinition.deploymentTim",width:180,customRender:({record:e})=>{if(e.processDefinition)return s.renderDate(e.processDefinition.deploymentTime)}}]}],ue=[{label:"流程标识",field:"key",component:"Input",colProps:{span:8}},{label:"流程名称",field:"name",component:"Input",colProps:{span:8}},{label:"流程分类",field:"category",component:"Select",componentProps:{options:u(p.BPM_MODEL_CATEGORY)},colProps:{span:8}}],$=[{label:"编号",field:"id",show:!1,component:"Input"},{label:"流程标识",field:"key",required:!0,component:"Input",dynamicDisabled:({values:e})=>!!e.id},{label:"流程名称",field:"name",required:!0,component:"Input",dynamicDisabled:({values:e})=>!!e.id},{label:"流程分类",field:"category",component:"Select",componentProps:{options:u(p.BPM_MODEL_CATEGORY)}},{label:"流程描述",field:"description",component:"InputTextArea"},{label:"表单类型",field:"formType",component:"Select",ifShow:({values:e})=>!!e.id,componentProps:{options:u(p.BPM_MODEL_FORM_TYPE)}},{label:"流程表单",field:"formId",component:"ApiSelect",ifShow:({values:e})=>!!e.id&&e.formType===10,componentProps:{api:()=>G(),labelField:"name",valueField:"id"}},{label:"表单提交路由",field:"formCustomCreatePath",component:"Input",helpMessage:"自定义表单的提交路径，使用 Vue 的路由地址，例如说：bpm/oa/leave/create",ifShow:({values:e})=>!!e.id&&e.formType===20},{label:"表单查看路由",field:"formCustomViewPath",component:"Input",helpMessage:"自定义表单的查看路径，使用 Vue 的路由地址，例如说：bpm/oa/leave/view",ifShow:({values:e})=>!!e.id&&e.formType===20}];function j(e){}function h(e){e.formType===10||P()({path:e.formCustomCreatePath})}const fe=_({name:"BpmModelModal",__name:"ModelModal",emits:["success","register"],setup(e,{emit:i}){const{t:a}=T(),{createMessage:r}=g(),l=R(!0),[b,{setFieldsValue:M,resetFields:y,validate:w}]=v({labelWidth:120,baseColProps:{span:24},schemas:$,showActionButtonGroup:!1,actionColOptions:{span:23}}),[C,{setModalProps:m,closeModal:D}]=L(async o=>{if(y(),m({confirmLoading:!1}),l.value=!!o?.isUpdate,t(l)){const f=await N(o.record.id);M({...f})}});async function S(){try{const o=await w();m({confirmLoading:!0}),t(l)?await U(o):await H(o),D(),i("success"),r.success(a("common.saveSuccessText"))}finally{m({confirmLoading:!1})}}return(o,f)=>(k(),x(t(A),O(o.$attrs,{onRegister:t(C),title:l.value?t(a)("action.edit"):t(a)("action.create"),onOk:S}),{default:B(()=>[F(t(E),{onRegister:t(b)},null,8,["onRegister"])]),_:1},16,["onRegister","title"]))}});export{fe as _,de as a,ce as c,pe as d,le as g,me as i,ue as s};
