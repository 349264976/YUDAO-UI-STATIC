import{u as h,B as I}from"./index-b9c40b5d.js";import{u as w,a as y}from"./useForm-8fd7b992.js";import"./index-c3c80eae.js";import{u as l}from"./useRender-7b752cf7.js";import{D as r,g as d}from"./dict-411628cd.js";import{bD as a,a as c,H as P,u as o,o as D,c as R,w as x,e as B,ag as O}from"./index-185fe65d.js";const q=[{title:"编号",dataIndex:"id",width:100},{title:"流程标识",dataIndex:"key",width:180},{title:"流程名称",dataIndex:"name",width:200},{title:"流程分类",dataIndex:"category",width:180,customRender:({text:e})=>l.renderDict(e,r.BPM_MODEL_CATEGORY,"string")},{title:"表单信息",dataIndex:"formType",width:200},{title:"创建时间",dataIndex:"createTime",width:180,customRender:({text:e})=>l.renderDate(e)}],H=[{label:"流程标识",field:"key",component:"Input",colProps:{span:8}},{label:"流程名称",field:"name",component:"Input",colProps:{span:8}},{label:"流程分类",field:"category",component:"Select",componentProps:{options:d(r.BPM_MODEL_CATEGORY)},colProps:{span:8}}],C=[{label:"编号",field:"id",show:!1,component:"Input"},{label:"流程标识",field:"key",required:!0,component:"Input",dynamicDisabled:({values:e})=>!!e.id},{label:"流程名称",field:"name",required:!0,component:"Input",dynamicDisabled:({values:e})=>!!e.id},{label:"流程分类",field:"category",component:"Select",dynamicDisabled:({values:e})=>!!e.id,componentProps:{options:d(r.BPM_MODEL_CATEGORY)}},{label:"流程描述",field:"description",component:"InputTextArea"}];function U(e){return a.get({url:"/bpm/model/page",params:e})}function T(e){return a.get({url:"/bpm/model/get?id="+e})}function E(e){return a.put({url:"/bpm/model/update",data:e})}function k(e){return a.post({url:"/bpm/model/create",data:e})}function V(e){return a.delete({url:"/bpm/model/delete?id="+e})}const L=c({name:"BpmModelModal"}),$=c({...L,emits:["success","register"],setup(e,{emit:p}){const n=P(!0),[m,{setFieldsValue:u,resetFields:f,validate:g}]=w({labelWidth:120,baseColProps:{span:24},schemas:C,showActionButtonGroup:!1,actionColOptions:{span:23}}),[b,{setModalProps:s,closeModal:_}]=h(async t=>{if(f(),s({confirmLoading:!1}),n.value=!!t?.isUpdate,o(n)){const i=await T(t.record.id);u({...i})}});async function M(){try{const t=await g();s({confirmLoading:!0}),o(n)?await E(t):await k(t),_(),p("success")}finally{s({confirmLoading:!1})}}return(t,i)=>(D(),R(o(I),O(t.$attrs,{onRegister:o(b),title:n.value?"编辑":"新增",onOk:M}),{default:x(()=>[B(o(y),{onRegister:o(m)},null,8,["onRegister"])]),_:1},16,["onRegister","title"]))}});export{$ as _,q as c,V as d,U as g,H as s};
