import{u as h,B as I}from"./index-b9c40b5d.js";import{u as _,a as x}from"./useForm-8fd7b992.js";import"./index-c3c80eae.js";import{u as w}from"./useRender-7b752cf7.js";import{D as l,g as J}from"./dict-411628cd.js";import{bD as t,a as u,H as P,u as o,o as N,c as R,w as S,e as j,ag as C}from"./index-185fe65d.js";const k=[{title:"任务编号",dataIndex:"id",width:100},{title:"任务名称",dataIndex:"name",width:180},{title:"处理器的名字",dataIndex:"handlerName",width:180},{title:"处理器的参数",dataIndex:"handlerParam",width:180},{title:"CRON 表达式",dataIndex:"cronExpression",width:200},{title:"任务状态",dataIndex:"status",width:180,customRender:({text:e})=>w.renderDict(e,l.INFRA_JOB_STATUS)}],E=[{label:"任务名称",field:"name",component:"Input",colProps:{span:8}},{label:"任务状态",field:"status",component:"Select",componentProps:{options:J(l.INFRA_JOB_STATUS)},colProps:{span:8}},{label:"处理器的名字",field:"handlerName",component:"Input",colProps:{span:8}}],M=[{label:"任务编号",field:"id",show:!1,component:"Input"},{label:"任务名称",field:"name",required:!0,component:"Input"},{label:"处理器的名字",field:"handlerName",required:!0,dynamicDisabled:({values:e})=>!!e.id,component:"Input"},{label:"处理器的参数",field:"handlerParam",component:"Input"},{label:"CRON 表达式",field:"cronExpression",required:!0,component:"Input"},{label:"重试次数",field:"retryCount",required:!0,helpMessage:"设置为 0 时，不进行重试",component:"InputNumber"},{label:"重试间隔",field:"retryInterval",required:!0,helpMessage:"单位：毫秒。设置为 0 时，无需间隔",component:"InputNumber",suffix:"毫秒"},{label:"监控超时时间",field:"monitorTimeout",component:"Input",suffix:"毫秒"}];function L(e){return t.get({url:"/infra/job/page",params:e})}function y(e){return t.get({url:"/infra/job/get?id="+e})}function B(e){return t.post({url:"/infra/job/create",data:e})}function F(e){return t.put({url:"/infra/job/update",data:e})}function H(e){return t.delete({url:"/infra/job/delete?id="+e})}function V(e){return t.download({url:"/infra/job/export-excel",params:e},"定时任务.xls")}function $(e,r){const a={id:e,status:r};return t.put({url:"/infra/job/update-status",params:a})}function G(e){return t.put({url:"/infra/job/trigger?id="+e})}const O=u({name:"InfraJobModal"}),W=u({...O,emits:["success","register"],setup(e,{emit:r}){const a=P(!0),[d,{setFieldsValue:c,resetFields:p,validate:f}]=_({labelWidth:120,baseColProps:{span:24},schemas:M,showActionButtonGroup:!1,actionColOptions:{span:23}}),[m,{setModalProps:s,closeModal:b}]=h(async n=>{if(p(),s({confirmLoading:!1}),a.value=!!n?.isUpdate,o(a)){const i=await y(n.record.id);c({...i})}});async function g(){try{const n=await f();s({confirmLoading:!0}),o(a)?await F(n):await B(n),b(),r("success")}finally{s({confirmLoading:!1})}}return(n,i)=>(N(),R(o(I),C(n.$attrs,{onRegister:o(m),title:a.value?"编辑":"新增",onOk:g}),{default:S(()=>[j(o(x),{onRegister:o(d)},null,8,["onRegister"])]),_:1},16,["onRegister","title"]))}});export{W as _,k as c,H as d,V as e,L as g,G as r,E as s,$ as u};
