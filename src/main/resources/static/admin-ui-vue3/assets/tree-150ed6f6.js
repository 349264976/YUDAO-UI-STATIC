const n={id:"id",children:"children",pid:"pid"},r={children:"children",label:"name",value:"id"},t=r=>Object.assign({},n,r),e=(n,r={})=>{r=t(r);const{children:e}=r,i=[...n];for(let t=0;t<i.length;t++)i[t][e]&&i.splice(t+1,0,...i[t][e]);return i},i=(n,r,e={})=>{e=t(e);const i=[],s=[...n],l=new Set,{children:d}=e;for(;s.length;){const n=s[0];if(l.has(n))i.pop(),s.shift();else if(l.add(n),n[d]&&s.unshift(...n[d]),i.push(n),r(n))return i}return null},s=(n,r,e={})=>{const i=(e=t(e)).children;return function n(t){return t.map((n=>({...n}))).filter((t=>(t[i]=t[i]&&n(t[i]),r(t)||t[i]&&t[i].length)))}(n)},l=(n,r,t,e)=>{if(!Array.isArray(n))return[];const i={id:r||"id",parentId:t||"parentId",childrenList:e||"children"},s={},l={},d=[];for(const o of n){const n=o[i.parentId];null==s[n]&&(s[n]=[]),l[o[i.id]]=o,s[n].push(o)}for(const o of n){null==l[o[i.parentId]]&&d.push(o)}for(const o of d)c(o);function c(n){if(null!==s[n[i.id]]&&(n[i.childrenList]=s[n[i.id]]),n[i.childrenList])for(const r of n[i.childrenList])c(r)}return d},d=(n,r,t,e,i)=>{r=r||"id",t=t||"parentId",i=i||Math.min(...n.map((n=>n[t])))||0;const s=JSON.parse(JSON.stringify(n)),l=s.filter((n=>{const e=s.filter((e=>n[r]===e[t]));return e.length>0&&(n.children=e),n[t]===i}));return""!==l?l:n};export{d as a,s as b,r as d,i as f,l as h,e as t};
